name: Publish & Release (nccs)

on:
  release:
    types: [published]

env:
  DOTNET_VERSION: 7.0.x
  CONFIGURATION: Release
  DIST_PATH: /tmp/dist
  OUTPUT_PATH: /tmp/out

jobs:
  build-nccs:
    name: Build (${{ matrix.runtime }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runtime: [linux-x64, linux-arm64, linux-musl-arm64, osx-x64, osx-arm64, win-x64, win-arm64]

    steps:
    - name: Checkout Repository Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: .NET Publish (nccs)
      run: |
        dotnet publish ./src/Neo.Compiler.CSharp \
        --framework net7.0 \
        --configuration ${{ env.CONFIGURATION }} \
        --runtime ${{ matrix.runtime }} \
        --self-contained true \
        --output ${{ env.OUTPUT_PATH }}/${{ matrix.runtime }} \
        --verbosity normal \
        -p:VersionPrefix=${{ github.event.release.tag_name }} \
        -p:RuntimeIdentifier=${{ matrix.runtime }} \
        -p:SelfContained=true \
        -p:IncludeNativeLibrariesForSelfExtract=false \
        -p:PublishTrimmed=false \
        -p:PublishSingleFile=true \
        -p:PublishReadyToRun=true \
        -p:EnableCompressionInSingleFile=true \
        -p:DebugType=embedded \
        -p:ServerGarbageCollection=true

    # - name: Remove Xml Comment Files
    #   working-directory: ${{ env.OUTPUT_PATH }}/${{ matrix.runtime }}
    #   run: rm -v *.xml

    - name: Create Distribution Directory
      run: mkdir -p ${{ env.DIST_PATH }}

    - name: Create Tarball File (linux)
      if: ${{ startsWith(matrix.runtime, 'linux') }}
      working-directory: ${{ env.OUTPUT_PATH }}/${{ matrix.runtime }}
      run: tar -czvf ${{ env.DIST_PATH }}/nccs.${{ github.event.release.tag_name }}-${{ matrix.runtime }}.tar.gz .

    - name: Create Tarball File (osx)
      if: ${{ startsWith(matrix.runtime, 'osx') }}
      working-directory: ${{ env.OUTPUT_PATH }}/${{ matrix.runtime }}
      run: tar -cJf ${{ env.DIST_PATH }}/nccs.${{ github.event.release.tag_name }}-${{ matrix.runtime }}.tar.xz .

    - name: Create Zip File (win)
      if: ${{ startsWith(matrix.runtime, 'win') }}
      working-directory: ${{ env.OUTPUT_PATH }}/${{ matrix.runtime }}
      run: zip ${{ env.DIST_PATH }}/nccs.${{ github.event.release.tag_name }}-${{ matrix.runtime }}.zip -r *

    - name: Create Checksum File (linux)
      if: ${{ startsWith(matrix.runtime, 'linux') }}
      working-directory: ${{ env.DIST_PATH }}
      env:
        FILENAME: nccs.${{ github.event.release.tag_name }}-${{ matrix.runtime }}
      run: sha256sum ${{ env.FILENAME }}.tar.gz > ${{ env.FILENAME }}.sha256

    - name: Create Checksum File (osx)
      if: ${{ startsWith(matrix.runtime, 'osx') }}
      working-directory: ${{ env.DIST_PATH }}
      env:
        FILENAME: nccs.${{ github.event.release.tag_name }}-${{ matrix.runtime }}
      run: sha256sum ${{ env.FILENAME }}.tar.xz > ${{ env.FILENAME }}.sha256

    - name: Create Checksum File (win)
      if: ${{ startsWith(matrix.runtime, 'win') }}
      working-directory: ${{ env.DIST_PATH }}
      env:
        FILENAME: nccs.${{ github.event.release.tag_name }}-${{ matrix.runtime }}
      run: sha256sum ${{ env.FILENAME }}.zip > ${{ env.FILENAME }}.sha256

    - name: Output/Distribution Directory Contents
      run: |
        ls -l ${{ env.DIST_PATH }}
        ls -l ${{ env.OUTPUT_PATH }}/${{ matrix.runtime }}

    - name: Upload Tarball File (linux)
      if: ${{ startsWith(matrix.runtime, 'linux') }}
      uses: actions/upload-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ env.DIST_PATH }}/nccs.${{ github.event.release.tag_name }}-${{ matrix.runtime }}.tar.gz
          asset_name: nccs.${{ github.event.release.tag_name }}-${{ matrix.runtime }}.tar.gz
          asset_content_type: application/x-gtar

    - name: Upload Tarball File (osx)
      if: ${{ startsWith(matrix.runtime, 'osx') }}
      uses: actions/upload-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ env.DIST_PATH }}/nccs.${{ github.event.release.tag_name }}-${{ matrix.runtime }}.tar.xz
          asset_name: nccs.${{ github.event.release.tag_name }}-${{ matrix.runtime }}.tar.xz
          asset_content_type: application/x-gtar

    - name: Upload Zip File (win)
      if: ${{ startsWith(matrix.runtime, 'win') }}
      uses: actions/upload-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ env.DIST_PATH }}/nccs.${{ github.event.release.tag_name }}-${{ matrix.runtime }}.zip
          asset_name: nccs.${{ github.event.release.tag_name }}-${{ matrix.runtime }}.zip
          asset_content_type: application/zip

    - name: Upload Checksum File (all)
      uses: actions/upload-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ env.DIST_PATH }}/nccs.${{ github.event.release.tag_name }}-${{ matrix.runtime }}.sha256
          asset_name: nccs.${{ github.event.release.tag_name }}-${{ matrix.runtime }}.sha256
          asset_content_type: text/plain
